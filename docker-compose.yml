# docker-compose.yml
version: '3.8'

services:
  # PHP Application Service (Laravel)
  app:
    build:
      context: . # Dockerfile is in the current directory (project root)
      dockerfile: Dockerfile
      # target: development # If you have different stages in your Dockerfile
    container_name: inventory_app_php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html # Mount current project directory into the container
      # Optional: Mount custom php.ini if you have one
      # - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - inventory_network
    depends_on:
      db: # Ensure db service is ready before app starts fully
        condition: service_healthy # Use healthcheck from db service

  # Nginx Web Server Service
  nginx:
    image: nginx:1.25-alpine # Using a specific version of nginx alpine
    container_name: inventory_app_nginx
    restart: unless-stopped
    ports:
      - "${APP_DOCKER_PORT:-8000}:80" # Map host port (default 8000) to container port 80
                                     # You can set APP_DOCKER_PORT in your .env if you want to change 8000
    volumes:
      - .:/var/www/html # Mount current project directory
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf # Mount Nginx config
    networks:
      - inventory_network
    depends_on:
      - app # Nginx depends on the PHP app service

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: inventory_app_mysql # Renamed for clarity
    restart: unless-stopped
    ports:
      # Map host port (default 33061) to container port 3306
      # Set DB_DOCKER_PORT in .env if you want to change 33061 (e.g., if 33061 is taken)
      - "${DB_DOCKER_PORT:-33061}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME} # Uses 'devuser' from your .env
      MYSQL_PASSWORD: ${DB_PASSWORD} # Uses 'devuser' from your .env
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootsecret} # Separate root password for MySQL itself
                                                          # Add DB_ROOT_PASSWORD=yoursecret to .env
    volumes:
      - db_data:/var/lib/mysql # Persist database data using a named volume
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give MySQL more time to start before first healthcheck

  # Optional: Node service for frontend (if you don't want to run npm run dev on host)
  # node:
  #   image: node:18-alpine
  #   container_name: inventory_app_node
  #   working_dir: /var/www/html
  #   volumes:
  #     - .:/var/www/html
  #   ports:
  #     - "${VITE_PORT:-5173}:5173" # Vite's default port
  #   command: sh -c "npm install && npm run dev -- --host 0.0.0.0" # Ensure Vite listens on all interfaces
  #   networks:
  #     - inventory_network

networks:
  inventory_network:
    driver: bridge

volumes:
  db_data: # Named volume to persist MySQL data
    driver: local
